	void script() override
	{
		std::string no_rw_check_opt = "";
		if (no_rw_check)
			no_rw_check_opt = " -no-rw-check";
		if (help_mode)
			no_rw_check_opt = " [-no-rw-check]";

		if (check_label("coarse"))
		{
			run("proc");
			run("flatten");
			run("tribuf -logic");
			run("deminout");
			run("opt_expr");
			run("opt_clean");
			run("check");
			run("opt -nodffe -nosdff");
			run("fsm");
			run("opt");
			run("wreduce");
			run("peepopt");
			run("opt_clean");
			run("share");
			run("techmap -map +/cmp2lut.v -D LUT_WIDTH=4");
			run("opt_expr");
			run("opt_clean");
			run("alumacc");
			run("opt");
			run("memory -nomap" + no_rw_check_opt);
			run("opt_clean");
		}

		run("memory_map");

		if (check_label("map_gates"))
		{
		  run("techmap");
		  run("opt -fast");
		}

		if (check_label("map_ffs"))
		{
			run("opt_clean");
#if 0
			std::string dfflegalize_args = " -cell $_DFF_?_ 01 -cell $_DFF_?P?_ r -cell $_SDFF_?P?_ r";
			dfflegalize_args += " -cell $_DFFE_??_ 01 -cell $_DFFE_?P??_ r -cell $_SDFFE_?P??_ r";
			dfflegalize_args += " -cell $_DLATCH_?_ x";
			run("dfflegalize" + dfflegalize_args, "($_ALDFF_*_ only if -asyncprld, $_DLATCH_* only if not -asyncprld, $_*DFFE_* only if not -nodffe)");
#endif
			run("opt_merge");
			run("opt_expr -undriven -mux_undef");
			run("simplemap");
			run("opt_clean");
		}

		if (check_label("map_luts"))
		{
		  std::string abc_args = " -dress";
		  abc_args += " -lut 4";

	  	  if (dff)
			abc_args += " -dff";

		  run("abc" + abc_args);
		  run("clean");
		}

	}
